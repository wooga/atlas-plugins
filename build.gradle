/*
 * Copyright 2018-2021 Wooga GmbH
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    repositories {
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
        classpath 'com.wooga.gradle:gradle-commons:[1,2['
        classpath 'net.wooga.gradle:github:[3,4['
        classpath 'net.wooga.gradle:github-release-notes:[2,3['
        classpath 'net.wooga.gradle:version:[2,3['
        classpath 'com.gradle.publish:plugin-publish-plugin:0.14.0'
        classpath 'org.ajoberstar.grgit:grgit-gradle:[4.1.1,5['
        classpath 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:3.5.0.2730'
        classpath 'org.apache.maven:maven-artifact:[3,4['
    }
}

plugins {
    id 'net.wooga.snyk' version '0.12.0'
    id 'net.wooga.snyk-gradle-plugin' version '0.6.0'
    id "net.wooga.cve-dependency-resolution" version "0.4.0"
}

apply plugin: new GroovyScriptEngine(
        [file('src/main/groovy').absolutePath] as String[], this.class.classLoader
).loadScriptByName('wooga/gradle/plugins/PluginsPlugin.groovy')

group 'net.wooga.gradle'
description = 'Plugin for wooga gradle plugin development.'


pluginBundle {
    website = 'https://wooga.github.io/atlas-plugins'
    vcsUrl = 'https://github.com/wooga/atlas-plugins'
    tags = ['plugins', 'publishing', 'internal']
}

gradlePlugin {
    plugins {
        plugins {
            id = 'net.wooga.plugins'
            displayName = 'wooga base gradle plugin'
            description = 'this plugin provides tasks and basic setup for other plugins'
            implementationClass = 'wooga.gradle.plugins.PluginsPlugin'
        }

        localPlugins {
            id = 'net.wooga.plugins-local'
            displayName = 'wooga base gradle plugin'
            description = 'this plugin provides tasks and basic setup for other plugins'
            implementationClass = 'wooga.gradle.plugins.LocalPluginsPlugin'
        }

        privatePlugins {
            id = 'net.wooga.plugins-private'
            displayName = 'wooga base gradle plugin for private plugins'
            description = 'this plugin provides tasks and basic setup for private plugins'
            implementationClass = 'wooga.gradle.plugins.PrivatePluginsPlugin'
        }
    }
}

github {
    repositoryName = "wooga/atlas-plugins"
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.wooga.gradle:gradle-commons:[1,2['
    implementation 'net.wooga.gradle:github:[3,4['
    implementation 'net.wooga.gradle:github-release-notes:[2,3['
    implementation 'net.wooga.gradle:version:[2,3['
    implementation 'com.gradle.publish:plugin-publish-plugin:0.14.0'
    implementation 'org.ajoberstar.grgit:grgit-gradle:[4.1.1,5['
    implementation 'org.ajoberstar.grgit:grgit-core:[4.1.1,5['
    implementation 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:3.0'
    implementation 'org.apache.maven:maven-artifact:[3,4['
    testImplementation('com.netflix.nebula:nebula-test:[8,9)') {
        version {
            strictly '8.1.0'
        }
    }
    testImplementation 'com.wooga.spock.extensions:spock-github-extension:0.3.0'
}
